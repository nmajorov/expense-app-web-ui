apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-nodejs-app
spec:
  params:
    - name: VERSION
      description: The version of the nodejs build image
      default: '10'
      type: string

    - name: sso-url
      description: "url to keycloak realm"
      type: string
      default: http://sso-test:8080/auth/

    - name: sso-realm
      description: "keycloak realm name"
      type: string
      default: basic


    - name: sso-client-id
      description: "keycloak client id"
      type: string
      default: app-react



  steps:
    - name: yarn-build-app
      image: 'registry.access.redhat.com/rhscl/nodejs-$(params.VERSION)-rhel7'
      workingDir: /workspace/input-ui-source
      command: ["/bin/bash", "-c"]

      args:
        - |-
          echo "current git branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "install yarn"
          npm install -g yarn
          echo "yarn version: $(yarn --version)"

          # echo define env for production
          export REACT_APP_KEYCLOAK_URL="$(params.sso-url)"
          export REACT_APP_KEYCLOAK_REALM="$(params.sso-realm)"
          export REACT_APP_KEYCLOAK_CLIENT_ID="$(params.sso-client-id)"

          # replace them on the env prod file
          
          sed -ri  "s|REACT_APP_KEYCLOAK_URL=.*|REACT_APP_KEYCLOAK_URL=$REACT_APP_KEYCLOAK_URL|g" .env.production
          sed -ri  "s|REACT_APP_KEYCLOAK_REALM=.*|REACT_APP_KEYCLOAK_URL=$REACT_APP_KEYCLOAK_REALM|g" .env.production
          sed -ri  "s|REACT_APP_KEYCLOAK_CLIENT_ID=.*|REACT_APP_KEYCLOAK_CLIENT_ID=$REACT_APP_KEYCLOAK_CLIENT_ID|g" .env.production

          echo "read react environment"
          cat .env.production

          echo "start build for prod"

          yarn build

          #copy web server config
          cp -r ./nginx.conf   ./build


    - name: deploy-app
      image: quay.io/openshift/origin-cli:latest
      workingDir: /workspace/input-ui-source
      command: ["/bin/bash", "-c"]

      args:
        - |-

          cd build
          ls -lisa

          oc get bc/nodejs-gui
          if [[ $? -ne 0 ]]
              then
          	        oc new-app --name=nodejs-gui --image-stream=openshift/nginx:1.16 --binary=true
                    oc start-build nodejs-gui --from-dir .
                    oc expose svc nodejs-gui

              else
                  echo "Application already exists."
          	      oc start-build nodejs-gui --from-dir=. --follow
          fi


  workspaces:
   - name: input
     mountPath: /workspace/input-ui-source
