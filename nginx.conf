
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }


    http{




         log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';


        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;




        server {
            listen       8080 default_server;
            listen       [::]:8080 default_server;
            server_name  _;

             root         /opt/app-root/src;
             index        index.html;

            # enable rewrite for react router
            location / {
                try_files $uri  /index.html;
            }

            location /api {
                #rewrite /api/(.*) /$1  break;
                resolver 172.30.0.10 valid=3s;
                proxy_pass http://expenses-backend-quarkus:8080;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_ssl_session_reuse off;
                proxy_set_header Host $http_host;
                proxy_cache_bypass $http_upgrade;
                proxy_redirect off;
            }

	   
            location /auth {
                resolver 172.30.0.10 valid=3s;
                proxy_pass http://sso-test:8080/auth;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_ssl_session_reuse off;
                proxy_set_header Host $http_host;
                proxy_cache_bypass $http_upgrade;
                proxy_redirect off;
            }

        }
    }
